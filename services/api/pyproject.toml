[tool.poetry]
name = "congressional-data-api"
version = "0.1.0"
description = "Enterprise-grade read-only API service for Congressional Data Automation"
authors = ["Congressional Data Team <team@congressionaldata.com>"]
readme = "README.md"
packages = [{include = "api"}]

[tool.poetry.dependencies]
python = ">=3.9,<3.13"
# Web framework
fastapi = "^0.110.0"
uvicorn = "^0.28.0"
# Database and ORM
sqlalchemy = "^2.0.0"
psycopg2-binary = "^2.9.0"
asyncpg = "^0.29.0"
# Data models and validation
pydantic = "^2.6.0"
pydantic-settings = "^2.2.0"
# Caching
redis = "^5.0.0"
# HTTP and async
httpx = "^0.27.0"
# Data processing
pandas = "^2.0.0"
# Logging and monitoring
structlog = "^24.1.0"
# Utilities
python-dotenv = "^1.0.0"
typer = "^0.12.0"
# Authentication and security
python-jose = "^3.3.0"
passlib = "^1.7.4"
# Rate limiting
slowapi = "^0.1.9"
# CORS
python-multipart = "^0.0.9"

[tool.poetry.group.dev.dependencies]
# Testing
pytest = "^8.0.0"
pytest-asyncio = "^0.23.0"
pytest-cov = "^5.0.0"
pytest-mock = "^3.12.0"
# Code quality
black = "^24.2.0"
isort = "^5.13.0"
flake8 = "^7.0.0"
mypy = "^1.9.0"
# Type stubs
types-psycopg2 = "^2.9.0"
types-redis = "^4.6.0"
# Load testing
locust = "^2.23.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3

[tool.mypy]
python_version = "3.9"
strict = true
ignore_missing_imports = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--cov=api --cov-report=term-missing --cov-report=html"
asyncio_mode = "auto"

[tool.coverage.run]
source = ["api"]
omit = ["tests/*", "api/__pycache__/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]